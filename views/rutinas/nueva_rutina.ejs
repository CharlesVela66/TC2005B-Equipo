<%- include('../includes/head.ejs'); %>
<br>
<form action="/rutinas/nueva_rutina" method="POST" autocomplete="off" id="rutina-form" enctype="multipart/form-data">
    <input type="hidden" name="_csrf" value="<%= csrfToken %>" >
    <h1 class="title is-1 has-text-white-ter">Agregar Rutinas</h1>
    <div class="card">
        <div class="columns">
            <div class="column">
                <div class="card-content">
                    <div class="content">
                        <p class="title is-4 has-text-white-ter">
                            Nombre de la rutina
                        </p>
                        <input type = "text" size = "30" class="input is-info is-small is-rounded" name = "nombre_rutina" id = "nombre_rutina" required="required" maxlength="25">
                    </div>
                </div>
            </div>
            <div class="column">
                <div class="card-content">
                    <div class="content">
                        <p class="title is-4 has-text-white-ter">
                            Descricpción
                        </p>
                        <input type = "text" size = "30" class="input is-info is-small is-rounded" name = "descripcion" id = "descripcion" required="required" maxlength="500">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br>
    <br>
    <div class="card">
        <div class="columns">
            <div class="column">
                <div class="card-content">
                    <div class="content">
                        <p class="title is-4 has-text-white-ter">
                            Imagen
                        </p>
                        <input type="file" id="imagen" name="imagen">
    
                    </div>
                </div>
            </div>
            <div class="column">
                <div class="card-content">
                    <div class="content">
                        <p class="title is-4 has-text-white-ter">
                            Tipo de rutina
                        </p>
                        <div class="select is-info is-small">
                                
                            <select value = "Escribe" name = "tiporutina" id = "tiporutina" required="required">
                                <option selected="true" disabled="disabled">Elige una opción</option>
                                <option>
                                    Bajar de Peso
                                </option>
                                <option>
                                    Mantener Peso
                                </option>
                                <option>
                                    Subir de Peso
                                </option>
                            </select>
                            </div>
                    </div>
                </div>
        </div>
    </div>
    <div class="card">
        <div class="card-content">
            <div class="content">
                <p class="title is-4 has-text-white-ter">
                    Ejercicios
                </p>
                <div class="columns">
                    <div class="column">
                        <input type="text" id="search" class="input is-info is-small is-rounded" placeholder="Buscar ejercicios">
                        <ul id="suggestions" class="suggestions-list">
                            
                        </ul>
                    </div>
                    <div class="column">
                        <table id="tabla-ejercicios" class="table is-bordered">
                            <colgroup>
                                <col span="1" style="width: 40%;">
                                <col span="1" style="width: 20;">
                                <col span="1" style="width: 20%;">
                                <col span="1" style="width: 20%;"
                            </colgroup>
                            <thead>
                                <tr>
                                    <th>Nombre del ejercicio</th>
                                    <th>Series</th>
                                    <th>Repeticiones</th>
                                    <th>Día</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <button id="submit-button" class="button is-info">Enviar</button>
</form>

<%- include('../includes/foot.ejs'); %>

<style>
    .suggestions-list {
        list-style-type: none;
        margin: 0;
        padding: 0;
        background-color: white;
        max-height: 200px;
        overflow-y: auto;
        position: absolute;
        z-index: 999;
        width: 100%;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }
    .suggestions-list li {
        padding: 8px 12px;
        cursor: pointer;
    }
    .suggestions-list li:hover {
        background-color: #e2e8f0;
    }
</style>

<script>
    // Aquí se obtienen todos los ejercicios que les pasamos desde el controlador, los transforma en string y luego los guarda en una constante ejercicios
    const ejerciciosStr = "<%- escape(JSON.stringify(ejercicios)) %>";
    const ejercicios = JSON.parse(unescape(ejerciciosStr));
    // Obtenemos el elemento de busqueda
    const searchInput = document.getElementById('search');
    // Lista que se va a desplegar como parte de la sugerencias
    const suggestionsList = document.getElementById('suggestions');
    // Tabla que registrara los ejercicios seleccionados
    const ejerciciosTable = document.getElementById('tabla-ejercicios');

    // Agregamos a la barra de busqueda un evento cuando se le ingrese texto
    searchInput.addEventListener('input', (e) => {
        // El valor de la busqueda ingresada se guarda en searchTerm
        const searchTerm = e.target.value.toLowerCase();
        // El HTML de la lista lo declaramos inicialmente como un string vacio
        suggestionsList.innerHTML = '';

        // Si existe texto dentro de la barra de busqueda...
        if (searchTerm) {
            // Filtramos cada ejercicio de la matriz ejercicios para ver los ejercicios que incluyen el searchTerm y los que hagan match se guardan en el arreglo de filteredEjercicios
            const filteredEjercicios = ejercicios.filter(ejercicio => ejercicio.descripcion.toLowerCase().includes(searchTerm));

            //Por cada ejercicio dentro del arreglo filteredEjercicios, creamos un elemento en la lista
            filteredEjercicios.forEach(ejercicio => {
                const listItem = document.createElement('li');
                // El contenido del elemento será la descripcion del ejercicio
                listItem.textContent = ejercicio.descripcion;
                // Le agregamos un evento a cada elemento de la lista por si se le hace click, llamará a la función de agregar ejercicio a tabla
                listItem.addEventListener('click', () => {
                    addEjercicioToTable(ejercicio);
                    // Cuando se le haga click a un elemento y se agregue a la tabla, debemos reiniciar la lista y el valor de busqueda
                    searchInput.value = '';
                    suggestionsList.innerHTML = '';
                });
                // Agregamos el elemento al HTML de la lista
                suggestionsList.appendChild(listItem);
            });
        }
    });

    function addEjercicioToTable(ejercicio) {

        // Creamos una nueva fila
        const row = document.createElement('tr');
        // Primera columna: Nombre del ejercicio
        const nombreCell = document.createElement('td');
        nombreCell.textContent = ejercicio.descripcion;
        nombreCell.id = `nombre`;
        nombreCell.name = `nombre`;
        nombreCell.setAttribute('data-idEjercicio', ejercicio.id_ejercicio);
        // Segunda columna: Series
        const seriesCell = document.createElement('td');
        const seriesInput = document.createElement('input');
        seriesInput.type = 'number';
        seriesInput.min = 0;
        seriesInput.max = 20;
        seriesInput.required = true;
        seriesInput.className = 'input is-info is-small is-rounded';
        seriesInput.id = `series`;
        seriesInput.name = `series`;
        seriesCell.appendChild(seriesInput);
        // Tercera columna: Repeticiones
        const repsCell = document.createElement('td');
        const repsInput = document.createElement('input');
        repsInput.type = 'number';
        repsInput.min = 0;
        repsInput.max = 99;
        repsInput.required = true;
        repsInput.className = 'input is-info is-small is-rounded';
        repsInput.id = `reps`;
        repsInput.name = `reps`;
        repsCell.appendChild(repsInput);
        // Cuarta columna: Dias 
        const diaCell = document.createElement('td');
        const diaSelect = document.createElement('select');
        diaSelect.className = 'select is-info is-small';
        diaSelect.id = `dia`;
        diaSelect.name = `dia`;
        diaSelect.required = true;
        // Opciones del select
        const dias = ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'];
        dias.forEach(dia => {
            // Agregamos las opciones al HTML
            const option = document.createElement('option');
            option.value = dia;
            option.textContent = dia;
            diaSelect.appendChild(option);
        });
        diaCell.appendChild(diaSelect);

        row.appendChild(nombreCell);
        row.appendChild(seriesCell);
        row.appendChild(repsCell);
        row.appendChild(diaCell);

        // Agregamos todo el codigo al HTML de la tabla 
        document.getElementById('tabla-ejercicios').querySelector('tbody').appendChild(row);
    }
    // Cuando se le haga click al botón submit...
    document.getElementById("submit-button").addEventListener("click", function (event) {
        // Verificamos que los campos del nombre de la rutina, tipo de rutina y descripcion hayan sido llenados
        const nombreRutina = document.getElementById("nombre_rutina");
        const tipoRutina = document.getElementById("tiporutina");
        const descripcion = document.getElementById("descripcion");

        if (!nombreRutina.value || tipoRutina.value === "Elige una opción" || !descripcion.value){
            return;
        }

        event.preventDefault();

        // Obtenemos la forma, la tabla y las filas con los ID's declarados en la vista
        const form = document.getElementById("rutina-form");
        const table = document.getElementById("tabla-ejercicios");
        const rows = Array.from(table.querySelectorAll("tr")).slice(1); // Omitir la fila del encabezado

        // Por cada ejercicio en la tabla regresamos
        const ejercicios = rows.map(row => {
        const cells = row.querySelectorAll("td");
        return {
            // El valor de la primera columna
            id_ejercicio: cells[0].getAttribute('data-idEjercicio'), 
            // El contenido de la primera columna
            nombre: cells[0].innerText,
            // El valor del input de la segunda columna
            series: cells[1].querySelector("input").value,
            // El valor del input de la tercera columna
            repeticiones: cells[2].querySelector("input").value,
            // La opcion seleccionada de la cuarta columna
            dia: cells[3].querySelector("select").value
        };
        });

        // Creamos un input escondido para que ese sea el que llamamos en el controlador con todos la información que se encuentra en las tablas
        const ejerciciosInput = document.createElement("input");
        ejerciciosInput.type = "hidden";
        ejerciciosInput.id = "ejercicios";
        ejerciciosInput.name = "ejercicios";
        ejerciciosInput.value = JSON.stringify(ejercicios);
        form.appendChild(ejerciciosInput);

        // Esa información es la que se envia en el form
        form.submit();
    });

</script>